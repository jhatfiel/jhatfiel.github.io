(function(){"use strict";class M{constructor(e,t){this.width=e,this.height=t,this.cells=Array.from({length:t},()=>Array.from({length:e},()=>({walls:{N:!0,E:!0,S:!0,W:!0},wallCount:4,highlighted:!1})))}cells;removeWall(e,t,r){const i=this.cells[t][e];if(i.walls[r]){i.walls[r]=!1,i.wallCount--;const s=g[r],l=e+s.xd,a=t+s.yd;a>=0&&a<this.height&&l>=0&&l<this.width&&(this.cells[a][l].walls[s.oDir]=!1,this.cells[a][l].wallCount--)}}}const d=[{dir:"N",xd:0,yd:-1,oDir:"S"},{dir:"E",xd:1,yd:0,oDir:"W"},{dir:"S",xd:0,yd:1,oDir:"N"},{dir:"W",xd:-1,yd:0,oDir:"E"}],g={N:d[0],E:d[1],S:d[2],W:d[3]};class y{constructor(e){this.maze=e}}class x extends y{startTime=Date.now();count=0;getNextWallToRemove(){const e=this.maze,t=e.width,r=e.height;let i=0,s=Math.floor(Math.random()*t),l=Math.floor(Math.random()*r),a=Math.floor(Math.random()*4),w=e.cells[l][s],n=d[a],h=s+n.xd,u=l+n.yd;for(;(w.walls[n.dir]===!1||w.wallCount<3||u>=0&&u<r&&h>=0&&h<t&&e.cells[u][h].wallCount<3)&&i<100;)s=Math.floor(Math.random()*t),l=Math.floor(Math.random()*r),w=e.cells[l][s],a=Math.floor(Math.random()*4),n=d[a],h=s+n.xd,u=l+n.yd,i++;return i>=100?(self.postMessage({method:"done"}),console.log(`Giving up on finding walls to remove - total time: ${Date.now()-this.startTime}ms for ${this.count} walls removed`),null):(e.removeWall(s,l,n.dir),this.count++,{x:s,y:l,dir:n.dir})}}async function v(o){if(!(o<=0))return new Promise(e=>setTimeout(e,o))}let p=0,f,c="stopped",m;self.onmessage=function({data:{method:o,maze:e,algorithm:t,delay:r=0}}){if(r!==void 0&&(p=r),e!==void 0&&(f=e,Object.setPrototypeOf(f,M.prototype)),t!==void 0)switch(t){case"Random":m=new x(f);break;default:m=null,console.error(`Unknown algorithm: ${t}`);return}switch(o){case"play":c="playing",z();break;case"stop":c="stopped";break}};function W(){const o=m?.getNextWallToRemove();return o===void 0?(c="stopped",self.postMessage({method:"done"}),null):(self.postMessage({...o,method:"removeWall"}),o)}async function z(){for(;c==="playing";){if(!W()){c="stopped",self.postMessage({method:"done"});return}await v(p)}}})();
